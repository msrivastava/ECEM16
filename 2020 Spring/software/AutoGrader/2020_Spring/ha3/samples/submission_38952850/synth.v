/* Generated by Yosys 0.3.0 (git sha1 UNKOWN) */

(* src = "design.sv:7" *)
module ha3(CLK, RST, REQ, A, D, ACK, FDBZ, Q, R);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  (* src = "design.sv:9" *)
  input [15:0] A;
  (* src = "design.sv:10" *)
  output ACK;
  (* src = "design.sv:8" *)
  input CLK;
  (* src = "design.sv:9" *)
  input [15:0] D;
  (* src = "design.sv:10" *)
  output FDBZ;
  (* src = "design.sv:11" *)
  output [15:0] Q;
  (* src = "design.sv:11" *)
  output [15:0] R;
  (* src = "design.sv:8" *)
  input REQ;
  (* src = "design.sv:8" *)
  input RST;
  (* src = "design.sv:13" *)
  wire [15:0] a;
  (* src = "design.sv:14" *)
  wire [15:0] d;
  NOR _32_ (
    .A(D[5]),
    .B(D[4]),
    .Y(_00_)
  );
  NOR _33_ (
    .A(D[7]),
    .B(D[6]),
    .Y(_01_)
  );
  NAND _34_ (
    .A(_01_),
    .B(_00_),
    .Y(_02_)
  );
  NOR _35_ (
    .A(D[1]),
    .B(D[0]),
    .Y(_03_)
  );
  NOR _36_ (
    .A(D[3]),
    .B(D[2]),
    .Y(_04_)
  );
  NAND _37_ (
    .A(_04_),
    .B(_03_),
    .Y(_05_)
  );
  NOR _38_ (
    .A(_05_),
    .B(_02_),
    .Y(_06_)
  );
  NOR _39_ (
    .A(D[13]),
    .B(D[12]),
    .Y(_07_)
  );
  NOR _40_ (
    .A(D[15]),
    .B(D[14]),
    .Y(_08_)
  );
  NAND _41_ (
    .A(_08_),
    .B(_07_),
    .Y(_09_)
  );
  NOR _42_ (
    .A(D[9]),
    .B(D[8]),
    .Y(_10_)
  );
  NOR _43_ (
    .A(D[11]),
    .B(D[10]),
    .Y(_11_)
  );
  NAND _44_ (
    .A(_11_),
    .B(_10_),
    .Y(_12_)
  );
  NOR _45_ (
    .A(_12_),
    .B(_09_),
    .Y(_13_)
  );
  NAND _46_ (
    .A(_13_),
    .B(_06_),
    .Y(_14_)
  );
  NOT _47_ (
    .A(A[15]),
    .Y(_15_)
  );
  NOR _48_ (
    .A(A[1]),
    .B(A[0]),
    .Y(_16_)
  );
  NOR _49_ (
    .A(A[3]),
    .B(A[2]),
    .Y(_17_)
  );
  NAND _50_ (
    .A(_17_),
    .B(_16_),
    .Y(_18_)
  );
  NOR _51_ (
    .A(A[5]),
    .B(A[4]),
    .Y(_19_)
  );
  NOR _52_ (
    .A(A[7]),
    .B(A[6]),
    .Y(_20_)
  );
  NAND _53_ (
    .A(_20_),
    .B(_19_),
    .Y(_21_)
  );
  NOR _54_ (
    .A(_21_),
    .B(_18_),
    .Y(_22_)
  );
  NOT _55_ (
    .A(A[14]),
    .Y(_23_)
  );
  NOR _56_ (
    .A(A[13]),
    .B(A[12]),
    .Y(_24_)
  );
  NAND _57_ (
    .A(_24_),
    .B(_23_),
    .Y(_25_)
  );
  NOR _58_ (
    .A(A[9]),
    .B(A[8]),
    .Y(_26_)
  );
  NOR _59_ (
    .A(A[11]),
    .B(A[10]),
    .Y(_27_)
  );
  NAND _60_ (
    .A(_27_),
    .B(_26_),
    .Y(_28_)
  );
  NOR _61_ (
    .A(_28_),
    .B(_25_),
    .Y(_29_)
  );
  NAND _62_ (
    .A(_29_),
    .B(_22_),
    .Y(_30_)
  );
  NAND _63_ (
    .A(_30_),
    .B(_15_),
    .Y(_31_)
  );
  NOR _64_ (
    .A(_31_),
    .B(_14_),
    .Y(Q[14])
  );
  NOR _65_ (
    .A(_14_),
    .B(_15_),
    .Y(Q[15])
  );
  assign ACK = 1'b0;
  assign FDBZ = 1'b0;
  assign Q[13:0] = { Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14], Q[14] };
  assign R = 16'b0000000000000000;
  assign a = A;
  assign d = D;
endmodule
